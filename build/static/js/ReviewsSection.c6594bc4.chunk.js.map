{"version":3,"sources":["components/reviews/Reviews.js"],"names":["Reviews","state","reviews","moviesApi","fetchMovieReviews","this","props","match","params","movieId","then","setState","length","map","review","author","content","id","Component"],"mappings":"4MAGqBA,E,4MACnBC,MAAQ,CAAEC,QAAS,I,kEAEE,IAAD,OAClBC,IACGC,kBAAkBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC1CC,MAAK,SAACR,GAAD,OAAa,EAAKS,SAAS,CAAET,iB,+BAG7B,IACAA,EAAYG,KAAKJ,MAAjBC,QACR,OACE,mCACGA,EAAQU,OAAS,EAChB,6BACGV,EAAQW,KAAI,SAACC,GAAD,OACX,6BACE,qCACE,0CAAaA,EAAOC,UACpB,4BAAID,EAAOE,cAHNF,EAAOG,SASpB,yE,GAzB2BC","file":"static/js/ReviewsSection.c6594bc4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport moviesApi from \"../../services/moviesApi\";\r\n\r\nexport default class Reviews extends Component {\r\n  state = { reviews: [] };\r\n\r\n  componentDidMount() {\r\n    moviesApi\r\n      .fetchMovieReviews(this.props.match.params.movieId)\r\n      .then((reviews) => this.setState({ reviews }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map((review) => (\r\n              <li key={review.id}>\r\n                <>\r\n                  <h3>Author: {review.author}</h3>\r\n                  <p>{review.content}</p>\r\n                </>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>there is no reviews for this movie</p>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}